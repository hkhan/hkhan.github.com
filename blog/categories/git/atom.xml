<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Git | Continous Improvement]]></title>
  <link href="http://hkhan.github.com/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://hkhan.github.com/"/>
  <updated>2015-06-06T19:59:44+01:00</updated>
  <id>http://hkhan.github.com/</id>
  <author>
    <name><![CDATA[Haroon Khan]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git: A Simple Workflow]]></title>
    <link href="http://hkhan.github.com/blog/2011/11/26/git-a-simple-workflow/"/>
    <updated>2011-11-26T23:41:00+00:00</updated>
    <id>http://hkhan.github.com/blog/2011/11/26/git-a-simple-workflow</id>
    <content type="html"><![CDATA[<p>This is a very simple yet effective workflow in small teams to encourage knowledge sharing and improve code quality. I have been using this lately and seems to be working very well. The following illustrates the workflow assuming the upstream remote named &lsquo;origin&rsquo; on github.</p>

<pre><code class="bash"># create and switch to a new feature branch
git checkout -b new-feature
</code></pre>

<pre><code class="bash"># do some work on the feature branch and commit locally
git commit -m 'Initial commit'

# push the 'feature' branch to remote 'origin'
git push -u origin new-feature and set up tracking
</code></pre>

<pre><code class="bash">git commit -m 'Some more feature work'

# push some more commited work to remote
git push new-feature
</code></pre>

<p>Once the feature has been completed, raise a <strong>pull request</strong> which will result in a notification to the team members to review and merge the feature code into the master branch.</p>

<p>After successful code review and merging, get <strong>Hubot</strong> to deploy the master branch, test the feature and have a cup of tea!</p>
]]></content>
  </entry>
  
</feed>
